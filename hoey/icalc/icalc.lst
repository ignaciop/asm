     1                                  ; icalc.asm
     2                                  extern printf
     3                                  section .data
     4 00000000 8000000000000000            number1     dq      128                                     ; the numbers to be used to
     5 00000008 1300000000000000            number2     dq      19                                      ; show the arithmetic
     6 00000010 F4FFFFFFFFFFFFFF            neg_num     dq      -12                                     ; to show sign extension
     7 00000018 546865206E756D6265-         fmt         db      "The numbers are %ld and %ld", 10, 0
     7 00000021 72732061726520256C-
     7 0000002A 6420616E6420256C64-
     7 00000033 0A00               
     8 00000035 257320256C640A00            fmtint      db      "%s %ld", 10, 0
     9 0000003D 5468652073756D2069-         sumi        db      "The sum is", 0
     9 00000046 7300               
    10 00000048 546865206469666665-         difi        db      "The difference is", 0
    10 00000051 72656E636520697300 
    11 0000005A 4E756D626572203120-         inci        db      "Number 1 is incremented", 0
    11 00000063 697320696E6372656D-
    11 0000006C 656E74656400       
    12 00000072 4E756D626572203120-         deci        db      "Number 1 is decremented", 0
    12 0000007B 69732064656372656D-
    12 00000084 656E74656400       
    13 0000008A 4E756D626572203120-         sali        db      "Number 1 Shift left 2 (x4):", 0
    13 00000093 5368696674206C6566-
    13 0000009C 74203220287834293A-
    13 000000A5 00                 
    14 000000A6 4E756D626572203120-         sari        db      "Number 1 Shift right 2 (/4):", 0
    14 000000AF 536869667420726967-
    14 000000B8 6874203220282F3429-
    14 000000C1 3A00               
    15 000000C3 4E756D626572203120-         sariex      db      "Number 1 Shift right 2 (/4) with sign extension:", 0
    15 000000CC 536869667420726967-
    15 000000D5 6874203220282F3429-
    15 000000DE 207769746820736967-
    15 000000E7 6E20657874656E7369-
    15 000000F0 6F6E3A00           
    16 000000F4 5468652070726F6475-         multi       db      "The product is", 0
    16 000000FD 637420697300       
    17 00000103 54686520696E746567-         divi        db      "The integer quotient is", 0
    17 0000010C 65722071756F746965-
    17 00000115 6E7420697300       
    18 0000011B 546865206D6F64756C-         remi        db      "The modulo is", 0
    18 00000124 6F20697300         
    19                                  section .bss
    20 00000000 ????????????????            resulti     resq    1
    21 00000008 ????????????????            modulo      resq    1
    22                                  
    23                                  section .text
    24                                      global main
    25                                  
    26                                  main:
    27 00000000 55                          push    rbp
    28 00000001 4889E5                      mov     rbp, rsp
    29                                  
    30                                      ; displaying the numbers
    31 00000004 48BF-                       mov     rdi, fmt
    31 00000006 [1800000000000000] 
    32 0000000E 488B3425[00000000]          mov     rsi, [number1]
    33 00000016 488B1425[08000000]          mov     rdx, [number2]
    34 0000001E B800000000                  mov     rax, 0
    35 00000023 E8(00000000)                call printf
    36                                  
    37                                      ; adding----------------------------------------------------------
    38 00000028 488B0425[00000000]          mov     rax, [number1]
    39 00000030 48030425[08000000]          add     rax, [number2]      ; add number2 to rax
    40 00000038 48890425[00000000]          mov     [resulti], rax      ; move sum to result
    41                                  
    42                                      ; displaying the result
    43 00000040 48BF-                       mov     rdi, fmtint
    43 00000042 [3500000000000000] 
    44 0000004A 48BE-                       mov     rsi, sumi
    44 0000004C [3D00000000000000] 
    45 00000054 488B1425[00000000]          mov     rdx, [resulti]
    46 0000005C B800000000                  mov     rax, 0
    47 00000061 E8(00000000)                call printf
    48                                  
    49                                      ; substracting----------------------------------------------------------
    50 00000066 488B0425[00000000]          mov     rax, [number1]
    51 0000006E 482B0425[08000000]          sub     rax, [number2]      ; substract number2 to rax
    52 00000076 48890425[00000000]          mov     [resulti], rax      
    53                                  
    54                                      ; displaying the result
    55 0000007E 48BF-                       mov     rdi, fmtint
    55 00000080 [3500000000000000] 
    56 00000088 48BE-                       mov     rsi, difi
    56 0000008A [4800000000000000] 
    57 00000092 488B1425[00000000]          mov     rdx, [resulti]
    58 0000009A B800000000                  mov     rax, 0
    59 0000009F E8(00000000)                call printf
    60                                  
    61                                      ; incrementing----------------------------------------------------------
    62 000000A4 488B0425[00000000]          mov     rax, [number1]
    63 000000AC 48FFC0                      inc     rax,                ; increment rax with 1
    64 000000AF 48890425[00000000]          mov     [resulti], rax      
    65                                  
    66                                      ; displaying the result
    67 000000B7 48BF-                       mov     rdi, fmtint
    67 000000B9 [3500000000000000] 
    68 000000C1 48BE-                       mov     rsi, inci
    68 000000C3 [5A00000000000000] 
    69 000000CB 488B1425[00000000]          mov     rdx, [resulti]
    70 000000D3 B800000000                  mov     rax, 0
    71 000000D8 E8(00000000)                call printf
    72                                  
    73                                      ; decrementing----------------------------------------------------------
    74 000000DD 488B0425[00000000]          mov     rax, [number1]
    75 000000E5 48FFC8                      dec     rax,                ; decrement rax with 1
    76 000000E8 48890425[00000000]          mov     [resulti], rax      
    77                                  
    78                                      ; displaying the result
    79 000000F0 48BF-                       mov     rdi, fmtint
    79 000000F2 [3500000000000000] 
    80 000000FA 48BE-                       mov     rsi, deci
    80 000000FC [7200000000000000] 
    81 00000104 488B1425[00000000]          mov     rdx, [resulti]
    82 0000010C B800000000                  mov     rax, 0
    83 00000111 E8(00000000)                call printf
    84                                  
    85                                      ; shift arithmetic left-------------------------------------------------
    86 00000116 488B0425[00000000]          mov     rax, [number1]
    87 0000011E 48C1E002                    sal     rax, 2              ; multiply rax by 4
    88 00000122 48890425[00000000]          mov     [resulti], rax      
    89                                  
    90                                      ; displaying the result
    91 0000012A 48BF-                       mov     rdi, fmtint
    91 0000012C [3500000000000000] 
    92 00000134 48BE-                       mov     rsi, sali
    92 00000136 [8A00000000000000] 
    93 0000013E 488B1425[00000000]          mov     rdx, [resulti]
    94 00000146 B800000000                  mov     rax, 0
    95 0000014B E8(00000000)                call printf
    96                                  
    97                                      ; shift arithmetic right------------------------------------------------
    98 00000150 488B0425[00000000]          mov     rax, [number1]
    99 00000158 48C1F802                    sar     rax, 2              ; divide rax by 4
   100 0000015C 48890425[00000000]          mov     [resulti], rax      
   101                                  
   102                                      ; displaying the result
   103 00000164 48BF-                       mov     rdi, fmtint
   103 00000166 [3500000000000000] 
   104 0000016E 48BE-                       mov     rsi, sari
   104 00000170 [A600000000000000] 
   105 00000178 488B1425[00000000]          mov     rdx, [resulti]
   106 00000180 B800000000                  mov     rax, 0
   107 00000185 E8(00000000)                call printf
   108                                  
   109                                      ; shift arithmetic right with sign extension----------------------------
   110 0000018A 488B0425[10000000]          mov     rax, [neg_num]
   111 00000192 48C1F802                    sar     rax, 2              ; divide rax by 4
   112 00000196 48890425[00000000]          mov     [resulti], rax      
   113                                  
   114                                      ; displaying the result
   115 0000019E 48BF-                       mov     rdi, fmtint
   115 000001A0 [3500000000000000] 
   116 000001A8 48BE-                       mov     rsi, sariex
   116 000001AA [C300000000000000] 
   117 000001B2 488B1425[00000000]          mov     rdx, [resulti]
   118 000001BA B800000000                  mov     rax, 0
   119 000001BF E8(00000000)                call printf
   120                                  
   121                                      ; multiply--------------------------------------------------------------
   122 000001C4 488B0425[00000000]          mov         rax, [number1]
   123 000001CC 48F72C25[08000000]          imul qword  [number2]        ; multiply rax with number2
   124 000001D4 48890425[00000000]          mov         [resulti], rax   
   125                                  
   126                                      ; displaying the result
   127 000001DC 48BF-                       mov         rdi, fmtint
   127 000001DE [3500000000000000] 
   128 000001E6 48BE-                       mov         rsi, multi
   128 000001E8 [F400000000000000] 
   129 000001F0 488B1425[00000000]          mov         rdx, [resulti]
   130 000001F8 B800000000                  mov         rax, 0
   131 000001FD E8(00000000)                call printf
   132                                  
   133                                      ; divide----------------------------------------------------------------
   134 00000202 488B0425[00000000]          mov         rax, [number1]
   135 0000020A BA00000000                  mov         rdx, 0           ; rdx needs to be 0 before idiv
   136 0000020F 48F73C25[08000000]          idiv qword  [number2]        ; multiply rax with number2
   137 00000217 48890425[00000000]          mov         [resulti], rax   ; divide rax by number2, modulo in rdx
   138 0000021F 48891425[08000000]          mov         [modulo], rdx    ; rdx to modulo
   139                                  
   140                                      ; displaying the result
   141 00000227 48BF-                       mov         rdi, fmtint
   141 00000229 [3500000000000000] 
   142 00000231 48BE-                       mov         rsi, divi
   142 00000233 [0301000000000000] 
   143 0000023B 488B1425[00000000]          mov         rdx, [resulti]
   144 00000243 B800000000                  mov         rax, 0
   145 00000248 E8(00000000)                call printf
   146 0000024D 48BF-                       mov         rdi, fmtint
   146 0000024F [3500000000000000] 
   147 00000257 48BE-                       mov         rsi, remi
   147 00000259 [1B01000000000000] 
   148 00000261 488B1425[08000000]          mov         rdx, [modulo]
   149 00000269 B800000000                  mov         rax, 0
   150 0000026E E8(00000000)                call printf
   151                                  
   152 00000273 4889EC                      mov rsp, rbp
   153 00000276 5D                          pop rbp
   154                                  
   155 00000277 C3                          ret

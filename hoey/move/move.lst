     1                                  ; move.asm
     2                                  
     3                                  section .data
     4 00000000 7B                          bNum    db      123
     5 00000001 3930                        wNum    dw      12345
     6 00000003 D2029649                    dNum    dd      1234567890
     7 00000007 1581E97DF4102211            qNum1   dq      1234567890123456789
     8 0000000F 40E2010000000000            qNum2   dq      123456
     9 00000017 1F85EB51B81E0940            qNum3   dq      3.14
    10                                  
    11                                  section .bss
    12                                  section .text
    13                                      global main
    14                                  main:
    15 00000000 55                          push    rbp
    16 00000001 4889E5                      mov     rbp, rsp
    17                                  
    18 00000004 48C7C0FFFFFFFF              mov     rax, -1             ; fill rax with 1s
    19 0000000B 8A0425[00000000]            mov     al, byte [bNum]     ; does NOT clear upper bits of rax
    20 00000012 4831C0                      xor     rax, rax            ; clear rax
    21 00000015 8A0425[00000000]            mov     al, byte [bNum]     ; now rax has the correct value
    22                                  
    23 0000001C 48C7C0FFFFFFFF              mov     rax, -1             ; fill rax with 1s
    24 00000023 668B0425[01000000]          mov     ax, word [wNum]     ; does NOT clear upper bits of rax
    25 0000002B 4831C0                      xor     rax, rax            ; clear rax
    26 0000002E 668B0425[01000000]          mov     ax, word [wNum]     ; now rax has the correct value
    27                                  
    28 00000036 48C7C0FFFFFFFF              mov     rax, -1             ; fill rax with 1s
    29 0000003D 8B0425[03000000]            mov     eax, dword [dNum]   ; does clear upper bits of rax
    30                                  
    31 00000044 48C7C0FFFFFFFF              mov     rax, -1             ; fill rax with 1s
    32 0000004B 488B0425[07000000]          mov     rax, qword [qNum1]  ; does clear upper bits of rax
    33 00000053 48890425[0F000000]          mov     qword [qNum2], rax  ; one operand always a register
    34 0000005B B840E20100                  mov     rax, 123456         ; source operand an immediate value
    35 00000060 F30F7E0425-                 movq    xmm0, [qNum3]       ; instruction for floating point
    35 00000065 [17000000]         
    36                                  
    37 00000069 4889EC                      mov     rsp, rbp
    38 0000006C 5D                          pop     rbp
    39                                  
    40 0000006D C3                          ret
